{"version":3,"sources":["REDUX/Reducer/LoginFormReducer.js","REDUX/Reducer/UserReducer.js","REDUX/Reducer/Confirmation.js","REDUX/Reducer/ManageProduct.js","REDUX/Reducer/index.js","REDUX/Action/types.js","HELPERS/database.js","REDUX/Action/userAction.js","HELPERS/scrollTop.jsx","PAGES/Login/Login.jsx","REDUX/Action/LoginFormAction.js","PAGES/Header/Header.jsx","PAGES/Navigation/Navbar.jsx","PAGES/LandingPage/LandingPage.jsx","PAGES/User/User.jsx","PAGES/Confirmation/Confirmation.jsx","PAGES/Order/Order.jsx","PAGES/Selling/Selling.jsx","PAGES/Product/NewProduct.jsx","REDUX/Action/ManageProduct.js","PAGES/Product/ManageProduct.jsx","PAGES/Messages/Messages.js","App.js","serviceWorker.js","index.js","IMG/Logo/Chew and Cheer blue_11.jpg","IMG/Logo/Chew and Cheer blue_21.jpg"],"names":["INITIAL_STATE","email","password","loading","error","id","username","status","role","token","encryptedEmail","userChecker","jumlahConfirm","updatePackage","combineReducers","loginForm","state","action","type","payload","user","confirmation","packageChecker","urlApi","userLogout","localStorage","removeItem","hitungConfirmation","dispatch","Axios","get","then","res","data","length","catch","err","console","log","ScrollToTop","prevProps","this","props","location","pathname","window","scrollTo","React","Component","withRouter","Login","inputEmail","inputPassword","onLoginBtnHandler","userInput","loginUser","renderButtonLogin","className","onClick","to","exact","Card","Body","Form","InputGroup","Prepend","Text","Provider","value","color","size","FormControl","placeholder","onChange","e","setState","target","body","connect","dataUser","post","setItem","respose","response","message","Header","bgNavbar","height","transition","imageBrand","Logo","imageTransition","handleScroll","pageYOffset","LogoScroll","addEventListener","style","background","sticky","Brand","Image","src","alt","fluid","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","icon","faBell","data-count","faSignOutAlt","Navbar","Nav","defaultActiveKey","Item","Link","as","faCalendarAlt","faCreditCard","faUtensils","faUsers","faChartLine","LandingPage","dataLangganan","allJadwalLangganan","pageContent","tanggalHariIni","moment","format","tanggalDitambahkan","getDataLangganan","jumlahHariBulanIni","daysInMonth","arrayJadwal","i","push","j","loopingJadwal","k","Math","ceil","l","slicer","Number","Date","getDate","sisaJadwalBulanIni","slice","tempJadwalPaketSampaiAkhirBulan","m","arraySelanjutya","tanggal","add","array1","ubahJadwal","n","o","cekHari","renderJadwalMemasak","map","val","idx","key","namaPaket","Menu","colSpan","Spinner","animation","variant","backgroundColor","disabled","Table","striped","bordered","hover","User","daftarUser","daftarUserTerbaik","getAllUsers","getDaftarUserTerbaik","renderDataUsers","tanggalBergabung","renderTransaksiUsers","UserId","Intl","NumberFormat","currency","TotalBelanjaan","JumlahTransaksi","Confirmation","listTransaksiMenunggu","historyDetail","modalShow","confirmPembayaranClicked","rejectPembayaranClicked","erorImage","imageStatus","getDataTransaksiMenunggu","getDetailHistory","idHistory","path","confirmPembayaran","obj","statusImage","put","swal","rejectPembayaran","text","imageError","image","onerror","renderTransaksiMenunggu","cursor","TanggalTransaksi","TotalBelanja","buktiPembayaranPath","width","borderRadius","padding","onError","renderModal","onHide","Modal","aria-labelledby","centered","closeButton","Title","renderHistoryDetail","href","Footer","Button","harga","discount","JumlahBox","TanggalMulai","TanggalBerakhir","Durasi","AlamatPenerima","Order","seluruhPesananHariIni","detailPesananDipilih","detailShow","getData","getJumlahPesanan","tanggalJadwal","getDetailPesanan","historyDipilih","renderListPesanan","NamaPenerima","KodePosPenerima","toString","Selling","produkTerbaik","getProdukTerbaik","renderProdukRanking","totalTerjual","jumlahTransaksi","ManagePaketBaru","inputNamaPaketAdd","inputHargaAdd","inputDiscountAdd","inputDeskripsAdd","imageLanggananAdd","tambahJadwal","tambahJadwalDariMenuClick","listAllMenuTambahJadwal","inputNamaMenuBaru","inputDeskripsiMenu","selectedNewMenu","tambahPaketClicked","files","getMenuTambahJadwal","getAllMenuTambahJadwal","tambahPaketLanggananDanJadwal","formdata","options","refs","inputKategori","FormData","headers","deskripsi","inputDeskripsiAdd","imagePath","kategori","idMenu","append","JSON","stringify","resetFunction","updateSubscribe","Deskripsi","document","getElementById","reset","renderPilihanMenuUntukTambah","htmlFor","onInput","Control","rows","ref","Group","controlId","Label","LanggananAdmin","listPaket","boxDetail","selectedProduct","editImageClick","imageLanggananNew","inputNamaPaketEdit","inputHargaEdit","inputDiscountEdit","inputDeskripsiEdit","listJadwal","modal9","selectedEditJadwalId","selectedNewMenuEdit","listAllMenu","tambahJadwalClick","updatePaket","onBtnDeletePaketClick","onBtnSaveUpdateClick","onBtnEditImageLanggananClick","tambahJadwalMenuBaruClick","tambahMenuDanJadwalClick","deleteJadwalClick","updateJadwalLanggananClick","toggle","nr","modalNumber","getDataPaket","updateDone","getAllMenu","getMenuJadwalEdit","detailProductClicked","onBtnAddImageLanggananClick","alert","saveEditingLangganan","objSelected","idPaket","jadwal","title","buttons","dangerMode","willDelete","deleteObj","idLangganan","jadwalPaket","delete","updateJadwalLangganan","menuBaru","idConnectionTable","idMenuBaru","idConnection","deleteJadwal","tambahJadwalMenuBaru","idKategori","urutan","tambahMenuDanJadwal","textDecoration","marginBottom","responsive","renderJadwalProductEdit","renderProduct","renderJadwalProduct","urutanPalsu","renderPilihanMenu","update","charAt","toUpperCase","substring","faPencilAlt","Messages","name","chat","App","getItem","keepLogin","checkLocalStorage","component","Product","Message","tokennya","Boolean","hostname","match","globalStore","createStore","Reducers","applyMiddleware","ReduxThunk","ReactDOM","render","store","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.78f76f58.chunk.js","sourcesContent":["import {\n    LOGIN_SUCCESS,\n    ON_USER_LOGIN,\n    LOGIN_FAILED\n} from '../Action/types'\n\n//INGET SETIAP GLOBAL STATE BERUBAH; COMPONENT AKAN RENDER ULANG\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    loading: false,\n    error: ''\n}\n\nexport default (state = INITIAL_STATE, action) => {   //pertama kali mulai langsung masuk ke default, karena action selalu ada isinya bawaan redux, (unknown isinya)\n    switch(action.type) {\n        case ON_USER_LOGIN:\n            return {...state, loading: true, error: ''}\n        case LOGIN_FAILED:\n            return {...state, loading: false, error: action.payload}\n        case LOGIN_SUCCESS:\n            return INITIAL_STATE\n        default: \n            return state\n    }\n}","import { LOGIN_SUCCESS, USER_LOGOUT } from \"../Action/types\"\n\nconst INITIAL_STATE = {\n    id: 0,\n    username: '',\n    email: '',\n    status: '',\n    role: '',\n    token: '',\n    encryptedEmail: '',\n    userChecker: false\n}\n\nexport default (state=INITIAL_STATE, action) => {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n            return {...action.payload, userChecker: true}\n        case USER_LOGOUT:\n            return {...INITIAL_STATE, userChecker: true}\n        case 'CHECK_LOCALSTORAGE':\n            return {...state, userChecker: true}\n        default:\n            return state\n    }\n}","const INITIAL_STATE = {jumlahConfirm: 0}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch(action.type){\n        case 'HITUNG_CONFIRMATION':\n            return {...state, jumlahConfirm: action.jumlahConfirm}\n        default:\n            return state\n    }\n}","const INITIAL_STATE = {\n    updatePackage: false\n}\n\nexport default (state=INITIAL_STATE, action) => {\n    switch (action.type) {\n        case 'UPDATE_PACKAGE':\n            return {...INITIAL_STATE, updatePackage: true}\n        case 'UPDATE_DONE':\n            return {...state, updatePackage: false}\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\nimport LoginFormReducer from './LoginFormReducer'\nimport UserReducer from './UserReducer'\nimport Confirm from './Confirmation'\nimport ManageProduct from './ManageProduct'\n\nexport default combineReducers({\n    loginForm: LoginFormReducer,\n    user: UserReducer,\n    confirmation: Confirm,\n    packageChecker: ManageProduct\n})","///////////////////////////LOGIN FORM///////////////////////////////////////\nexport const ON_USER_LOGIN = 'ON_USER_LOGIN';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\n//////////////////////////CHECKOUT////////////////////////////////////////\nexport const FIRST_CHECKOUT_CLIKED = 'FIRST_CHECKOUT_CLIKED'\n","// export const urlApi = \"https://api-catering-gh-pages-production.up.railway.app/\";\nexport const urlApi = \"https://brave-duck-jersey.cyclic.app/\";\n\n// export const urlApi = 'http://localhost:1997/'","import {LOGIN_SUCCESS, USER_LOGOUT} from './types'\nimport Axios from 'axios'\nimport { urlApi } from '../../HELPERS/database'\n\nexport const confirmLogin = (user) => {\n    return {\n        type: LOGIN_SUCCESS,\n        payload: user\n    }\n}\n\nexport const keepLogin = (tokennya) => {\n    return (dispatch) => {\n        var options = {\n            headers: {\n                'Authorization': `Bearer ${tokennya}`\n            }\n        }\n        Axios.post(urlApi + 'user/keeplogin', null, options)\n        .then(res => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            })\n        })\n        .catch(err => {\n            localStorage.removeItem('token')\n            dispatch({\n                type: USER_LOGOUT,\n            })\n            console.log(err)\n        })\n    }\n}\n\nexport const userLogout = () => {\n    localStorage.removeItem('token')\n    return {\n        type: USER_LOGOUT\n    }\n}\n\nexport const checkLocalStorage = () => {\n    return (dispatch) => {\n        dispatch({\n            type: 'CHECK_LOCALSTORAGE'\n        })\n    }\n}\n\nexport const hitungConfirmation = () => {\n    return (dispatch) => {\n        Axios.get(urlApi + `admin/getTransaksiMenunggu`)\n        .then((res) => {\n            dispatch({\n                type: 'HITUNG_CONFIRMATION',\n                jumlahConfirm: res.data.length\n            })\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n}","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.location.pathname !== prevProps.location.pathname\n    ) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default withRouter(ScrollToTop);","import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport './Login.css'\nimport { loginUser } from '../../REDUX/Action/LoginFormAction'\nimport { Redirect } from 'react-router-dom'\nimport {Card, Form, InputGroup, FormControl} from \"react-bootstrap\"\nimport {IconContext} from \"react-icons\";\nimport {AiTwotoneMail} from 'react-icons/ai'\nimport {FaLock} from 'react-icons/fa'\n\nclass Login extends Component {\n\n    state = {\n        inputEmail: '',\n        inputPassword: ''\n    }\n\n    onLoginBtnHandler = () => {\n        let userInput = {\n            email: this.state.inputEmail,\n            password: this.state.inputPassword\n        }\n      this.props.loginUser(userInput)\n    }\n\n    renderButtonLogin = () => {\n        if (!this.props.loginForm.loading) {\n            return <button type=\"submit\" className=\"btn btn-danger\" onClick={this.onLoginBtnHandler}>SIGN IN</button>\n        } else {\n            return(\n                <>\n                    <div className=\"spinner-border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </>\n            ) \n        }\n    }\n\n    render() {\n        if (this.props.user.status !== '') return <Redirect to=\"/\" exact/>\n        return (\n            <div className=\"container-fluid background-image d-flex align-items-center justify-content-center\">\n            <Card className=\"card-login d-none d-lg-block\">\n                <Card.Body>\n                    <div className='row justify-content-center mb-3'>\n                        <h1 className=\"my-3 font-weight-bold text-center\">Sign In</h1>\n                    </div>\n                    <Form className=\"mb-3 pr-5 pl-5\">\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text id=\"basic-addon1\">\n                                    <IconContext.Provider\n                                        value={{\n                                        color: 'black',\n                                        size: '23px'\n                                    }}>\n                                        <AiTwotoneMail/>\n                                    </IconContext.Provider>\n                                </InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl placeholder=\"Email\" onChange={(e) => this.setState({inputEmail: e.target.value})}/>\n                        </InputGroup>\n                    </Form>\n                    <Form className=\"mb-4 pr-5 pl-5\">\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text id=\"basic-addon1\">\n                                    <IconContext.Provider\n                                        value={{\n                                        color: 'black',\n                                        size: '23px'\n                                    }}>\n                                        <FaLock/>\n                                    </IconContext.Provider>\n                                </InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <FormControl placeholder=\"Password\" type=\"password\" onChange={(e) => this.setState({inputPassword: e.target.value})}/>\n                        </InputGroup>\n                        <div className=\"text-center mt-1 mb-1 text-danger\">\n                            {\n                                this.props.loginForm.error\n                                ?\n                                <>\n                                    {this.props.loginForm.error}\n                                </>\n                                :\n                                <>\n                                    &nbsp;\n                                </>\n                            }\n                        </div>\n                        <div className=\"text-center mt-1\">\n                            {this.renderButtonLogin()}\n                        </div>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <Card body className=\"d-lg-none\">Please use a large device.</Card>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({loginForm, user}) => {\n    return {\n        loginForm,\n        user\n    }\n}\n\nexport default connect(mapStateToProps, {loginUser})(Login);","import {\n   ON_USER_LOGIN,\n   LOGIN_FAILED,\n   LOGIN_SUCCESS\n} from '../Action/types'\nimport Axios from 'axios'\nimport {urlApi} from '../../HELPERS/database'\n\nexport const loginUser = (dataUser) => {\n    return (dispatch) => {\n        dispatch({type: ON_USER_LOGIN})\n        if (dataUser.email !== '' && dataUser.password !== '') {\n           Axios.post(urlApi + 'user/login', {\n               email: dataUser.email,\n               password: dataUser.password\n           })\n           .then(res => {\n               if (res.data.username !== \"Admin\"){\n                    dispatch({\n                        type: LOGIN_FAILED,\n                        payload: 'Wrong username or password'\n                    })\n               } else {\n                    localStorage.setItem('token', res.data.token)\n                    dispatch({\n                        type: LOGIN_SUCCESS,\n                        payload: res.data\n                    })\n               }\n           })\n           .catch(err => {\n               console.log(err.respose)\n               dispatch({\n                    type: LOGIN_FAILED,\n                    payload: err.response.data.message\n                })\n           })\n        } else {\n            dispatch({\n                type: LOGIN_FAILED,\n                payload: 'Please input username and password'\n            })\n        }\n    }\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Navbar, OverlayTrigger, Tooltip, Image} from \"react-bootstrap\"\nimport { faBell, faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {userLogout, hitungConfirmation} from '../../REDUX/Action/userAction'\nimport Logo from '../../IMG/Logo/Chew and Cheer blue_11.jpg'\nimport LogoScroll from '../../IMG/Logo/Chew and Cheer blue_21.jpg'\nimport './Header.css'\n\nclass Header extends Component {\n\n    state = {\n        bgNavbar: \"\",\n        height: \"\",\n        transition: \"\",\n        jumlahConfirm: this.props.jumlahConfirm,\n        imageBrand: Logo,\n        imageTransition: \"\"\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScroll)\n        this.props.hitungConfirmation()\n    }\n\n    componentDidUpdate(){\n        if (this.state.jumlahConfirm !== this.props.jumlahConfirm) {\n            this.props.hitungConfirmation()\n        }\n    }\n\n    handleScroll = () => {\n        if (window.pageYOffset > 0) {\n            if(!this.state.bgNavbar) {\n                this.setState({bgNavbar: \"#0000fe\", height: \"70px\", transition: \"height 1s\", imageBrand: LogoScroll, imageTransition: \"opacity 1s ease-in-out\"})\n            }\n        } else {\n            if (this.state.bgNavbar) {\n                this.setState({bgNavbar: \"\", height: \"90px\", imageBrand: Logo})\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Navbar style={{background: \"#0000fe\", height: this.state.height, transition: this.state.transition}} sticky=\"top\">\n                <Navbar.Brand><b className=\"text-white\">WELCOME ADMIN &nbsp; | </b><Image src={this.state.imageBrand} alt='LogoNormal' fluid className=\"link-logo\"/></Navbar.Brand>\n                    {/* <Form inline className=\"ml-auto\">\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-2\"/>\n                        <Button variant=\"light\"><FontAwesomeIcon icon={faSearch} /></Button>\n                    </Form> */}\n                <div className=\"ml-auto\">\n                    {/* <OverlayTrigger placement=\"bottom\" delay={{ show: 100, hide: 200 }} overlay={<Tooltip id=\"tooltip-bottom\">Inbox</Tooltip>}>\n                        <Link to=\"/message\" className=\"text-dark\">\n                            <span className=\"ml-3 mr-2 fa-stack\">\n                                <FontAwesomeIcon icon={faEnvelope} className=\"text-white fa-stack-2x\"/>\n                            </span>\n                        </Link>\n                    </OverlayTrigger> */}\n                    <OverlayTrigger placement=\"bottom\" delay={{ show: 100, hide: 200 }} overlay={<Tooltip id=\"tooltip-bottom\">{this.props.jumlahConfirm} Notification</Tooltip>}>\n                        <Link to=\"/confirmation\" className=\"text-dark\">\n                            {\n                                this.props.jumlahConfirm === 0\n                                ?\n                                <span className=\"mr-2 fa-stack\">\n                                    <FontAwesomeIcon icon={faBell} className=\"text-white fa-stack-2x\"/>\n                                </span>\n                                :\n                                <span className=\"mr-2 fa-stack\" data-count={this.props.jumlahConfirm}>\n                                    <FontAwesomeIcon icon={faBell} className=\"text-white fa-stack-2x\"/>\n                                </span>\n                            }\n                        </Link>\n                    </OverlayTrigger>\n                    <OverlayTrigger placement=\"bottom\" delay={{ show: 100, hide: 200 }} overlay={<Tooltip id=\"tooltip-bottom\">Signout</Tooltip>}>\n                        <Link to=\"/confirmation\" className=\"text-dark\">\n                            <span className=\"mr-2 fa-stack\">\n                                <FontAwesomeIcon icon={faSignOutAlt} onClick={this.props.userLogout} className=\"text-white fa-stack-2x\"/>\n                            </span>\n                        </Link>         \n                    </OverlayTrigger>\n                </div>\n            </Navbar>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        jumlahConfirm: state.confirmation.jumlahConfirm\n    }\n}\n\nexport default connect(mapStateToProps, {userLogout, hitungConfirmation})(Header);","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {userLogout} from '../../REDUX/Action/userAction'\nimport {Nav} from 'react-bootstrap'\nimport './Navbar.css'\nimport {Link} from 'react-router-dom'\nimport { faCalendarAlt, faUtensils, faChartLine, faUsers, faCreditCard } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <Nav defaultActiveKey=\"/\" className=\"sticky-top position-navbar pt-5 mt-5\">\n                <Nav.Item className=\"mt-5\">\n                    <Nav.Link as = {Link} to=\"/\" className=\"text-white mx-2\"><FontAwesomeIcon icon={faCalendarAlt} size=\"lg\" className=\"mr-2\"/> Schedule</Nav.Link><hr className=\"bg-secondary mx-4\"/>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link as = {Link} to=\"/order\" className=\"text-white mx-2\"><FontAwesomeIcon icon={faCreditCard} size=\"lg\" className=\"mr-2\"/> Order</Nav.Link><hr className=\"bg-secondary mx-4\"/>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link as = {Link} to=\"/product\" className=\"text-white mx-2\"><FontAwesomeIcon icon={faUtensils} size=\"lg\" className=\"mr-2\"/> Products</Nav.Link><hr className=\"bg-secondary mx-4\"/>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link as = {Link} to=\"/user\" className=\"text-white mx-2\"><FontAwesomeIcon icon={faUsers} size=\"lg\" className=\"mr-2\"/> User</Nav.Link><hr className=\"bg-secondary mx-4\"/>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link as = {Link} to=\"/selling\" className=\"text-white mx-2\"><FontAwesomeIcon icon={faChartLine} size=\"lg\" className=\"mr-2\"/> Selling</Nav.Link><hr className=\"bg-secondary mx-4\"/>\n                </Nav.Item>\n            </Nav>\n        );\n    }\n}\n\nexport default connect(null, {userLogout})(Navbar);","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport Axios from 'axios'\nimport {urlApi} from '../../HELPERS/database'\nimport moment from 'moment'\nimport {Table, Spinner} from 'react-bootstrap'\n\nclass LandingPage extends Component {\n\n    state = {\n        dataLangganan: [],\n        allJadwalLangganan: [],\n        pageContent: 0,\n        tanggalHariIni: moment().format(\"D MMMM YYYY\"),\n        tanggalDitambahkan: 0,\n    }\n\n    componentDidMount () {\n        this.getDataLangganan()\n    }\n\n    /////////////////////////////////////////////////////////GET API DATA////////////////////////////////////////////\n    getDataLangganan = () => {\n        var jumlahHariBulanIni = moment().daysInMonth()\n        Axios.get(urlApi + 'jadwalAdmin/getKategoriLangganan')\n        .then(res => {\n            this.setState({dataLangganan: res.data, pageContent: res.data.length})\n\n            var arrayJadwal = []\n            for (var i = 0; i < res.data.length; i++) {\n                Axios.get(urlApi + 'jadwalAdmin/getJadwalLangganan/' + res.data[i].id)\n                .then(res => {\n                    arrayJadwal.push(res.data)\n                    if (arrayJadwal.length === this.state.dataLangganan.length) {\n                        for (var j = 0; j < arrayJadwal.length; j ++) {\n                            var loopingJadwal = []\n                            for (var k = 0; k < Math.ceil(jumlahHariBulanIni / arrayJadwal[j].length); k++) {\n                                for (var l = 0; l < arrayJadwal[j].length; l++) {\n                                    loopingJadwal.push(arrayJadwal[j][l])\n\n                                    var tanggalHariIni = moment().format(\"dddd, MMMM Do YYYY\")\n                                    var slicer = Number(new Date().getDate()) - 1\n                                    var jadwalSebulanFixed = loopingJadwal.slice(0, jumlahHariBulanIni)\n                                    var sisaJadwalBulanIni = jadwalSebulanFixed.slice(slicer)\n\n                                    var tempJadwalPaketSampaiAkhirBulan = []\n                                    for (var m = 0; m < sisaJadwalBulanIni.length; m ++) {\n                                        if (m > 0) {\n                                            var arraySelanjutya = {...sisaJadwalBulanIni[m], tanggal: moment().add(m, 'days').format(\"dddd, MMMM Do YYYY\")}\n                                            tempJadwalPaketSampaiAkhirBulan.push(arraySelanjutya)\n                                        } else {\n                                            var array1 = {...sisaJadwalBulanIni[0], tanggal: tanggalHariIni}\n                                            tempJadwalPaketSampaiAkhirBulan.push(array1)\n                                        }\n                                    }\n\n                                }\n                            }\n                            arrayJadwal[j] = tempJadwalPaketSampaiAkhirBulan\n                            var ubahJadwal = []\n                            for (var n = 0; n < sisaJadwalBulanIni.length; n++) {\n                                ubahJadwal[n] = []\n                                for (var o = 0; o < this.state.pageContent; o ++) {\n                                    ubahJadwal[n].push(arrayJadwal[o][n])\n                                }\n                            }\n                        }\n                        this.setState({allJadwalLangganan: ubahJadwal})\n                    }\n                }).catch(err => {\n                    console.log(err)\n                })\n            }\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    cekHari = () => {\n        console.log(this.state.tanggalDitambahkan)\n        if (moment().add(this.state.tanggalDitambahkan, 'days').format(\"dddd\") === \"Sunday\") {\n            this.setState({tanggalDitambahkan: this.state.tanggalDitambahkan + 1})\n            return <h6>{moment().add(this.state.tanggalDitambahkan, 'days').format(\"D MMMM YYYY\")}</h6>\n        } else if (moment().add(this.state.tanggalDitambahkan, 'days').format(\"dddd\") === \"Saturday\") {\n            this.setState({tanggalDitambahkan: this.state.tanggalDitambahkan + 2})\n            return <h6>{moment().add(this.state.tanggalDitambahkan, 'days').format(\"D MMMM YYYY\")}</h6>\n        } else {\n            return <h6>{moment().add(this.state.tanggalDitambahkan, 'days').format(\"D MMMM YYYY\")}</h6>\n        }\n    }\n\n    ////////////////////////////////////////////////FUNGSI RENDER///////////////////////////////////////////////////////\n\n    renderJadwalMemasak = () => {\n        if (this.state.allJadwalLangganan.length !== 0) {\n            var jsx = this.state.allJadwalLangganan[this.state.tanggalDitambahkan].map((val, idx) => {\n                return (\n                    <tr key={val.id} className=\"text-center\">\n                        <td>{idx + 1}</td>\n                        <td>{val.namaPaket}</td>\n                        <td>{val.Menu}</td>\n                    </tr>\n                )\n            })\n            return jsx\n        } else {\n            return  <tr>\n                        <td colSpan=\"3\" className = \"text-center\">\n                            <Spinner animation=\"border\" variant=\"secondary\"/>\n                        </td>\n                    </tr>\n\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"background-main-admin\">\n                <div className=\"container-fluid card-main card-main-mobile\">\n                    <div className=\"row mx-3\">\n                        <h5>This is daily menu based on the package provided to our customer everyday up to the end of month.</h5>\n                        <div className=\"col-12 justify-content-center\">\n                            <div className=\"card my-4\">\n                                <div className=\"card-header text-center\" style={{backgroundColor: '#E32E89'}}>\n                                    <h3>CATERING SCHEDULE</h3>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row my-3\">\n                                        <div className=\"col-5\">\n                                            {this.cekHari()}\n                                        </div>\n                                        <div className=\"col-7 text-right\">\n                                            <div className=\"row\">\n                                                <div className=\"col-6\">\n                                                    {\n                                                        this.state.tanggalDitambahkan === 0\n                                                        ?\n                                                        <button className=\"btn btn-dark btn-block p-1 m-0\" disabled>Back</button>\n                                                        :\n                                                        <>\n                                                        {\n                                                            moment().add(this.state.tanggalDitambahkan - 1, 'days').format(\"dddd\") === 'Sunday' \n                                                            ?\n                                                            <button className=\"btn btn-success btn-block p-1 m-0\" onClick={() => this.setState({tanggalDitambahkan: this.state.tanggalDitambahkan - 3})}>Back</button>\n                                                            :\n                                                            <button className=\"btn btn-success btn-block p-1 m-0\" onClick={() => this.setState({tanggalDitambahkan: this.state.tanggalDitambahkan - 1})}>Back</button>\n                                                        }\n                                                        </>              \n                                                    }       \n                                                </div>\n                                                <div className=\"col-6\">\n                                                    {\n                                                        moment().add(this.state.tanggalDitambahkan, 'days').format(\"D\") === `${moment().daysInMonth()}` || this.state.tanggalDitambahkan + new Date().getDate() > moment().daysInMonth() \n                                                        ?\n                                                        <button className=\"btn btn-dark btn-block p-1 m-0\" disabled>Next</button>\n                                                        :\n                                                        <>\n                                                        {\n                                                            moment().add(this.state.tanggalDitambahkan + 1, 'days').format(\"dddd\") === 'Saturday' \n                                                            ?\n                                                            <button className=\"btn btn-success btn-block p-1 m-0\" onClick={() => this.setState({tanggalDitambahkan: this.state.tanggalDitambahkan + 3})}>Next</button>\n                                                            :\n                                                            <button className=\"btn btn-success btn-block p-1 m-0\" onClick={() => this.setState({tanggalDitambahkan: this.state.tanggalDitambahkan + 1})}>Next</button>\n                                                        }\n                                                        </>\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <Table striped bordered hover>\n                                                <thead className=\"text-center text-white\" style={{backgroundColor: '#60217B'}}>\n                                                    <tr>\n                                                        <th>No.</th>\n                                                        <th>Package</th>\n                                                        <th>Menu</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {this.renderJadwalMemasak()}   \n                                                </tbody>\n                                            </Table>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>       \n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({user}) => {\n    return {user}\n}\n\nexport default connect(mapStateToProps)(LandingPage);","import React, { Component } from 'react';\nimport Axios from 'axios'\nimport { urlApi } from '../../HELPERS/database'\nimport {Table} from 'react-bootstrap'\n\nclass User extends Component {\n\n    state = {\n        daftarUser: [],\n        daftarUserTerbaik: []\n    }\n\n    componentDidMount(){\n        this.getAllUsers()\n        this.getDaftarUserTerbaik()\n    }\n\n    getAllUsers = () => {\n        Axios.get(urlApi + 'user/getAllUsers')\n        .then(res => {\n            this.setState({daftarUser: res.data})\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    getDaftarUserTerbaik = () => {\n        Axios.get(urlApi + 'pesanan/daftarUserTerbaik')\n        .then(res => {\n            this.setState({daftarUserTerbaik: res.data})\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    renderDataUsers = () => {\n        return this.state.daftarUser.map(val => {\n            return (\n                <tr key={val.id} className='text-dark text-center'>\n                    <td>{val.id}</td>\n                    <td>{val.username}</td>\n                    <td>{val.email}</td>\n                    <td>{val.status}</td>\n                    <td>{val.tanggalBergabung.slice(0, 10)}</td>\n                    <td>{val.role}</td>\n                </tr>\n            )\n        })\n    }\n\n    renderTransaksiUsers = () => {\n        return this.state.daftarUserTerbaik.map(val => {\n            return (\n                <tr key={val.UserId} className='text-dark'>\n                    <td>{val.username}</td>\n                    <td>{val.UserId}</td>\n                    <td>{new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(val.TotalBelanjaan)}</td>\n                    <td>{val.JumlahTransaksi}</td>\n                </tr>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"background-main-admin\">\n            <div className=\"container-fluid card-main card-main-mobile\">\n                <div className=\"row mx-3\">\n                    <div className=\"col-12\">\n                        <div className=\"card mt-5\">\n                            <div className=\"card-header text-center\" style={{backgroundColor: '#E32E89'}}>\n                                <h3>USERS DATA</h3>\n                            </div>\n                            <div className=\"card-body mx-3\">\n                                <Table striped bordered hover className=\"text-white text-center\">\n                                    <thead color=\"text-center text-white\" style={{backgroundColor: '#60217B'}}>\n                                        <tr>\n                                            <th>ID</th>\n                                            <th>Username</th>\n                                            <th>Email</th>\n                                            <th>Status</th>\n                                            <th>Register Date</th>\n                                            <th>Role</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.renderDataUsers()}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row my-5 mx-3\">\n                    <div className='col-12'>\n                        <div className=\"card\">\n                            <div className=\"card-header text-center\" style={{backgroundColor: '#E32E89'}}>\n                                <h3>USER TRANSACTION RANKING</h3>\n                            </div>\n                            <div className=\"card-body mx-3\">\n                                {\n                                    this.state.daftarUserTerbaik.length === 0\n                                    ?\n                                    <h3 className=\"text-center h3-responsive\">User Has Not Order Any Package This Month</h3>\n                                    :\n                                    <Table striped bordered hover className=\"text-white text-center\">\n                                        <thead color=\"text-center text-white\" style={{backgroundColor: '#60217B'}}>\n                                            <tr>\n                                                <th>Username</th>\n                                                <th>UserId</th>\n                                                <th>Total Spending</th>\n                                                <th>Total Transaction</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.renderTransaksiUsers()}\n                                        </tbody>\n                                    </Table>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default User;","import React, { Component } from 'react';\nimport {urlApi} from '../../HELPERS/database'\nimport Axios from 'axios'\nimport swal from 'sweetalert'\nimport {connect} from 'react-redux'\nimport {hitungConfirmation} from '../../REDUX/Action/userAction'\nimport {Table, Modal, Button} from 'react-bootstrap'\nimport './Confirmation.css'\n\nclass Confirmation extends Component {\n\n    state = {\n        listTransaksiMenunggu: [],\n        historyDetail: [],\n        modalShow: false,\n        confirmPembayaranClicked: false,\n        rejectPembayaranClicked: false,\n        erorImage: '',\n        imageStatus: 'exist'\n    }\n\n    componentDidMount(){\n        this.getDataTransaksiMenunggu()\n    }\n\n    componentDidUpdate() {\n        this.renderTransaksiMenunggu()\n    }\n\n\n    ////////////////////////////////////////////////// GET DATA API //////////////////////////////////////////////////\n\n    getDataTransaksiMenunggu = () => {\n        Axios.get(urlApi + 'admin/getTransaksiMenunggu')\n        .then((res) => {\n            this.setState({listTransaksiMenunggu: res.data})\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    getDetailHistory = (idHistory, path) => {\n        Axios.get(urlApi + `history/getHistoryDetailById/` + idHistory)\n            .then((res)=>{\n                if (this.state.erorImage !== '') {\n                    this.setState({historyDetail: res.data, modalShow: true})\n                } else {\n                    this.setState({historyDetail: res.data, modalShow: true, erorImage: `${urlApi}${path}`})\n                }      \n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    //////////////////////////////////////////////// ACTION FUNCTION //////////////////////////////////////////////\n\n\n    confirmPembayaran = (id) => {\n        this.setState({confirmPembayaranClicked: true})\n        var obj = {\n            idHistory: id,\n            statusImage: this.state.imageStatus\n        }\n        Axios.put(urlApi + 'admin/confirmPembayaran', obj)\n        .then((res)=>{\n            this.getDataTransaksiMenunggu()\n            this.props.hitungConfirmation()\n            swal ('Transaction confirmed!', `Please check list of order.`, 'success')\n            this.setState({confirmPembayaranClicked: false})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n\n    rejectPembayaran = (id) => {\n        this.setState({rejectPembayaranClicked: true})\n        var obj = {\n            idHistory: id,\n            statusImage: this.state.imageStatus\n        }\n        Axios.put(urlApi + 'admin/rejectPembayaran', obj)\n        .then((res)=>{\n            this.getDataTransaksiMenunggu()\n            this.props.hitungConfirmation()\n            swal({\n                icon: \"success\",\n                text: 'Transaction rejected!'\n            })\n            this.setState({rejectPembayaranClicked: false})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n\n\n    //////////////////////////////////////////////// IMAGE ERROR //////////////////////////////////////////////////\n\n    imageError = (image) => {\n        image.onerror = \"\"\n        image.target.src = `${urlApi}/images/ImageError/Explanation.png`\n        this.setState({erorImage: `${urlApi}/images/ImageError/Explanation.png`, imageStatus: 'null'})\n        return true;\n    }\n\n    //////////////////////////////////////////////// RENDER FUNCTION //////////////////////////////////////////////\n\n    renderTransaksiMenunggu = () => {\n        var jsx = this.state.listTransaksiMenunggu.map(val => {\n            return (\n                <tr key={val.id} className='text-dark text-center' style={{cursor: 'pointer'}}>\n                    <td>{val.UserId}/{val.username}</td>\n                    <td>{val.TanggalTransaksi}</td>\n                    <td>{val.TotalBelanja}</td>\n                    <td><img src={`${urlApi}${val.buktiPembayaranPath}`} style={{width:'70px',height: '70px', borderRadius: '4px', padding: '5px'}}\n                        onError={(e) => this.imageError(e)} alt='Cannot Get Transfer Proof'></img>\n                    </td>\n                    {\n                            this.state.modalShow === true \n                            ?\n                            <>\n                                <td><input type=\"button\" value=\"DETAIL\" className=\"btn btn-info btn-block\" /></td>\n                                {this.renderModal(\n                                    {\n                                        show: this.state.modalShow,\n                                        onHide: () => this.setState(\n                                                    {\n                                                        modalShow: false, historyDetail: []\n                                                    }\n                                                )\n                                    }\n                                )}\n                            </>\n                            :\n                            <td><input type=\"button\" value=\"DETAIL\" className=\"btn btn-info btn-block\" onClick={() => this.getDetailHistory(val.id, val.buktiPembayaranPath)}/></td>\n                    }\n                    {\n                        this.state.confirmPembayaranClicked || this.state.rejectPembayaranClicked\n                        ?\n                        <>\n                            <td><input type=\"button\" value=\"Confirm\" className=\"btn btn-success btn-block\"/></td>\n                            <td><input type=\"button\" value=\"Reject\" className=\"btn btn-danger btn-block\"/></td>\n                        </>\n                        :\n                        <>\n                            <td><input type=\"button\" value=\"Confirm\" className=\"btn btn-success btn-block\" onClick={() => this.confirmPembayaran(val.id)}/></td>\n                            <td><input type=\"button\" value=\"Reject\" className=\"btn btn-danger btn-block\" onClick={() => this.rejectPembayaran(val.id)}/></td>\n                        </>\n                    }\n                </tr>\n            )\n        })\n        return jsx\n    }\n\n    renderModal = (props) => {\n        return (\n          <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header closeButton className=\"bg-primary\" >\n              <Modal.Title>\n                    <h5 className=\"font-weight-bold\">YOUR TRANSACTION DETAIL</h5>\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Table striped bordered hover size=\"sm\">\n                    <thead>\n                        <tr>\n                        <th>No.</th>\n                        <th>Package</th>\n                        <th>Price</th>\n                        <th>Discount</th>\n                        <th>Qty</th>\n                        <th>Start Date</th>\n                        <th>End Date</th>\n                        <th>Duration</th>\n                        <th>Delivery</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderHistoryDetail()}\n                    </tbody>\n                </Table>\n                <h6 className=\"font-weight-bold\">Proof of Payment:</h6>\n                <center>\n                    <a href={this.state.erorImage}>\n                    <img src={this.state.erorImage} alt=\"img error\" style={{width:'50%',height: '50%', borderRadius: '4px', padding: '5px'}}/>\n                    </a>\n                </center>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.onHide}>CLOSE</Button>\n            </Modal.Footer>\n          </Modal>\n        );\n    }\n\n    renderHistoryDetail = () => {\n        var jsx = this.state.historyDetail.map((val, idx) => {\n            return (\n                    <tr key = {val.id} className=\"text-center\">\n                        <td>{idx + 1 }</td>\n                        <td>{val.namaPaket}</td>\n                        <td>{val.harga}</td>\n                        <td>{val.discount}</td>\n                        <td>{val.JumlahBox}</td>\n                        <td>{val.TanggalMulai.slice(0, 10)}</td>\n                        <td>{val.TanggalBerakhir.slice(0, 10)}</td>\n                        <td>{val.Durasi}</td>\n                        <td>{val.AlamatPenerima}</td>\n                    </tr>\n                    )\n        })\n        return jsx\n    }\n\n    //////////////////////////////////////////////// DISPLAY ///////////////////////////////////////////////////////\n\n\n    render() {\n        return (\n            <div>\n               <div className=\"card m-3\">\n                    <div className=\"card-header text-center\" style={{backgroundColor: '#7FBB28'}}>\n                        <h3>WAITING CONFIRMATION</h3>\n                    </div>\n                    <div className=\"card-body\">\n                        {\n                            this.state.listTransaksiMenunggu.length > 0\n                            ?\n                            <Table className=\"text-white\" striped bordered hover>\n                                <thead color=\"text-white\" style={{backgroundColor: '#0085C7'}}>\n                                    <tr className=\"text-center\">\n                                        <th>UserId/Name</th>\n                                        <th>Transaction Date</th>\n                                        <th>Total</th>\n                                        <th>Receipt</th>\n                                        <th>Detail</th>\n                                        <th>Confirm</th>\n                                        <th>Cancel</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.renderTransaksiMenunggu()}           \n                                </tbody>\n                            </Table>\n                            :\n                            <h3 className=\"text-center h3-responsive\">No Waiting Confirmation This Month</h3>\n                        }\n                    </div>\n                </div> \n            </div>\n        );\n    }\n}\n\n\nexport default connect(null, {hitungConfirmation})(Confirmation);\n","import React, { Component } from 'react';\nimport {urlApi} from '../../HELPERS/database'\nimport Axios from 'axios'\nimport moment from 'moment'\nimport { Table, Modal, Button } from 'react-bootstrap';\n\nclass Order extends Component {\n\n    state = {\n        seluruhPesananHariIni: [],\n        tanggalHariIni: moment().format(\"D MMMM YYYY\"),\n        tanggalDitambahkan: 0,\n        detailPesananDipilih: null,\n        detailShow: false,\n        getData: false\n    }\n\n    componentDidMount() {\n        this.getJumlahPesanan(moment().add(this.state.tanggalDitambahkan, 'days').format(\"YYYY-MM-DD\").toString())\n    }\n\n    componentDidUpdate() {\n        if (this.state.getData === false) {\n            this.getJumlahPesanan(moment().add(this.state.tanggalDitambahkan, 'days').format(\"YYYY-MM-DD\").toString())\n        }\n    }\n\n    ////////////////////////////////////////////// GET DATA API ///////////////////////////////////////////////////\n\n    getJumlahPesanan = (tanggalJadwal) => {\n        Axios.get(urlApi + 'jadwalAdmin/getJumlahPesananPerhari/' + tanggalJadwal)\n        .then(res => {\n            this.setState({seluruhPesananHariIni: res.data, getData: true})\n        }).catch(err => {\n            console.log(err)\n        })   \n    }\n\n    getDetailPesanan = (historyDipilih) => {\n        this.setState({detailPesananDipilih: historyDipilih, detailShow: true})\n    }\n\n    ///////////////////////////////////////////// FUNGSI ACTION //////////////////////////////////////////////////\n\n    cekHari = () => {\n        if (moment().add(this.state.tanggalDitambahkan, 'days').format(\"dddd\") === \"Sunday\") {\n            this.setState({tanggalDitambahkan: this.state.tanggalDitambahkan + 1})\n            return <h6>{moment().add(this.state.tanggalDitambahkan, 'days').format(\"D MMMM YYYY\")}</h6>\n        } else if (moment().add(this.state.tanggalDitambahkan, 'days').format(\"dddd\") === \"Saturday\") {\n            this.setState({tanggalDitambahkan: this.state.tanggalDitambahkan + 2})\n            return <h6>{moment().add(this.state.tanggalDitambahkan, 'days').format(\"D MMMM YYYY\")}</h6>\n        } else {\n            return <h6>{moment().add(this.state.tanggalDitambahkan, 'days').format(\"D MMMM YYYY\")}</h6>\n        }\n    }\n\n    ////////////////////////////////////////////// FUNGSI RENDER /////////////////////////////////////////////////\n\n    renderListPesanan = () => {       \n        if (this.state.seluruhPesananHariIni.length !== 0) {\n            var jsx = this.state.seluruhPesananHariIni.map(val => {\n                return (\n                    <tr key={val.id} className=\"text-center\">\n                        <td>{val.namaPaket}</td>\n                        <td>{val.TanggalMulai.slice(0, 10)}</td>\n                        <td>{val.TanggalBerakhir.slice(0, 10)}</td>\n                        <td>{val.JumlahBox}</td>\n                        {\n                            this.state.detailShow === true\n                            ?\n                            <>\n                                <td><input type=\"button\" className='btn btn-info' value=\"Detail\"/></td>\n                                {this.renderModal(\n                                    {\n                                        show: this.state.detailShow,\n                                        onHide: () => this.setState(\n                                                    {\n                                                        detailShow: false, detailPesananDipilih: null \n                                                    }\n                                                )\n                                    }\n                                )}\n                            </>\n                            :\n                            <td><input type=\"button\" className='btn btn-info' value=\"Detail\" onClick={() => this.getDetailPesanan(val)}/></td>\n                        }\n                    </tr>\n                )\n            })\n            return jsx\n        }\n    }\n\n    renderModal = (props) => {\n        return (\n          <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header closeButton className=\"bg-primary\" >\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                <p className=\"font font-weight-bold\">ORDER DETAIL</p>\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Table striped bordered hover className=\"text-center\">\n                    <thead style={{backgroundColor: '#60217B'}} className=\"text-center text-white\">\n                        <tr>\n                            <td>Username</td>\n                            <td>Package</td>\n                            <td>Qty</td>\n                            <td>Recipient's Name</td>\n                            <td>Address</td>\n                            <td>Postal Code</td>\n                        </tr>\n                    </thead>\n                    <tr>\n                        <td>{this.state.detailPesananDipilih.username}</td>\n                        <td>{this.state.detailPesananDipilih.namaPaket}</td>\n                        <td>{this.state.detailPesananDipilih.JumlahBox}</td>\n                        <td>{this.state.detailPesananDipilih.NamaPenerima}</td>\n                        <td>{this.state.detailPesananDipilih.AlamatPenerima}</td>\n                        <td>{this.state.detailPesananDipilih.KodePosPenerima}</td>\n                    </tr>\n                </Table>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.onHide}>CLOSE</Button>\n            </Modal.Footer>\n          </Modal>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n              <div className=\"card m-5\">\n                    <div className=\"card-header text-center\" style={{backgroundColor: '#E32E89'}}>\n                        <h3>ORDER LIST</h3>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            <div className=\"col-5\">\n                                {this.cekHari()}\n                            </div>\n                            <div className=\"col-7 text-right\">\n                                <div className=\"row\">\n                                    <div className=\"col-6\">\n                                        {\n                                            this.state.tanggalDitambahkan === 0\n                                            ?\n                                            <button className=\"btn btn-dark btn-block p-1 m-0\" disabled>Back</button>\n                                            :\n                                            <>\n                                            {\n                                                moment().add(this.state.tanggalDitambahkan - 1, 'days').format(\"dddd\") === 'Sunday' \n                                                ?\n                                                <button className=\"btn btn-success btn-block p-1 m-0\" onClick={() => this.setState({tanggalDitambahkan: this.state.tanggalDitambahkan - 3, getData: false})}>Back</button>\n                                                :\n                                                <button className=\"btn btn-success btn-block p-1 m-0\" onClick={() => this.setState({tanggalDitambahkan: this.state.tanggalDitambahkan - 1, getData: false})}>Back</button>\n                                            }\n                                            </>              \n                                        }       \n                                    </div>\n                                    <div className=\"col-6\">\n                                        {\n                                            moment().add(this.state.tanggalDitambahkan, 'days').format(\"D\") === `${moment().daysInMonth()}` || moment().add(this.state.tanggalDitambahkan + 3, 'days').format(\"MMMM\") !== moment().add(this.state.tanggalDitambahkan, 'days').format(\"MMMM\")\n                                            ?\n                                            <button className=\"btn btn-dark btn-block p-1 m-0\" disabled>Next</button>\n                                            :\n                                            <>\n                                            {\n                                                moment().add(this.state.tanggalDitambahkan + 1, 'days').format(\"dddd\") === 'Saturday' \n                                                ?\n                                                <button className=\"btn btn-success btn-block p-1 m-0\" onClick={() => this.setState({tanggalDitambahkan: this.state.tanggalDitambahkan + 3, getData: false})}>Next</button>\n                                                :\n                                                <button className=\"btn btn-success btn-block p-1 m-0\" onClick={() => this.setState({tanggalDitambahkan: this.state.tanggalDitambahkan + 1, getData: false})}>Next</button>\n                                            }\n                                            </>\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {\n                            this.state.seluruhPesananHariIni.length > 0\n                            ?\n                            <Table striped bordered hover className=\"mt-4\">\n                            <thead style={{backgroundColor: '#60217B'}} className=\"text-center text-white\">\n                                <tr>\n                                    <th>Package</th>\n                                    <th>Start</th>\n                                    <th>End</th>\n                                    <th>Qty</th>\n                                    <th>Detail</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.renderListPesanan()}\n                            </tbody>\n                            </Table>\n                            :\n                        <h3 className=\"text-center h3-responsive mt-5\">No Order</h3>\n                        }       \n                    </div>\n                </div>  \n            </div>\n        );\n    }\n}\n\nexport default Order;","import React, { Component } from 'react';\nimport {urlApi} from '../../HELPERS/database'\nimport Axios from 'axios'\nimport { Table } from 'react-bootstrap'\n\nclass Selling extends Component {\n\n    state = {\n        produkTerbaik: '',\n    }\n\n    componentDidMount () {\n        this.getProdukTerbaik()\n    }\n\n    getProdukTerbaik = () => {\n        Axios.get(urlApi + 'pesanan/daftarProdukTerbaik')\n        .then(res => {\n            this.setState({produkTerbaik: res.data})\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    renderProdukRanking = () => {\n        if(this.state.produkTerbaik.length !== 0) {\n            return this.state.produkTerbaik.map(val => {\n                return (\n                    <tr key={val.namaPaket} className='text-dark'>\n                        <td>{val.namaPaket}</td>\n                        <td>{val.totalTerjual}</td>\n                        <td>{val.jumlahTransaksi}</td>\n                    </tr>\n                )\n            })\n        }\n    }\n\n    render() {\n        return (\n                <div className=\"card m-5\">\n                    <div className=\"card-header text-center\" style={{backgroundColor: '#7FBB28'}}>\n                        <h3>PRODUCT SALES RANKING</h3>\n                    </div>\n                    <div className=\"card-body mx-3\">\n                        {\n                            this.state.produkTerbaik.length === 0\n                            ?\n                            <h3 className=\"text-center h3-responsive\">No Product Sold This Month</h3>\n                            :\n                            <Table striped bordered hover className=\"text-center\">\n                                <thead color=\"text-center text-white\" style={{backgroundColor: '#0085C7'}}>\n                                    <tr>\n                                        <th>Package Name</th>\n                                        <th>Total Sales</th>\n                                        <th>Transaction Amount</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.renderProdukRanking()}\n                                </tbody>\n                            </Table>\n                        }\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport default Selling;","import React, { Component } from 'react'\nimport { urlApi } from '../../HELPERS/database'\nimport Axios from 'axios'\nimport {connect} from 'react-redux'\nimport {updateSubscribe} from '../../REDUX/Action/ManageProduct'\nimport {Button, Form, Spinner} from 'react-bootstrap'\nimport swal from 'sweetalert'\n\nclass ManagePaketBaru extends Component {\n\n    state = {\n        inputNamaPaketAdd: false,\n        inputHargaAdd: false,\n        inputDiscountAdd: false,\n        inputDeskripsAdd: false,\n        imageLanggananAdd: false,\n        tambahJadwal: false,\n        tambahJadwalDariMenuClick: false,\n        listAllMenuTambahJadwal: [],\n        inputNamaMenuBaru: '',\n        inputDeskripsiMenu: '',\n        selectedNewMenu: '',\n        tambahPaketClicked: false\n    }\n\n    ////////////////////////////////////////GET VALUE INPUT //////////////////////////////////////\n\n    imageLanggananAdd = (e) => {\n        if(e.target.files[0]) {\n            this.setState({ imageLanggananAdd: e.target.files })\n        } else {\n            this.setState({ imageLanggananAdd: null })\n        }\n    }\n\n    getMenuTambahJadwal = (e) => {\n        this.setState({selectedNewMenu: e.target.value})\n    }\n\n    ////////////////////////////////////////GET DATA API////////////////////////////////////////////\n\n    getAllMenuTambahJadwal = (id) => {\n        Axios.get(urlApi + 'jadwal/getallmenu')\n        .then((res) => {\n            this.setState({tambahJadwal: true, listAllMenuTambahJadwal: res.data, tambahJadwalDariMenuClick: true})\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    ///////////////////////////////////////////FUNCTION TO BACKEND //////////////////////////////////////77\n\n    tambahPaketLanggananDanJadwal = () => {\n        this.setState({tambahPaketClicked: true})\n        var data\n        var formdata\n        var options\n        if (this.state.tambahJadwalDariMenuClick) {\n            if ( this.state.inputNamaPaketAdd && this.state.inputHargaAdd && this.state.inputDiscountAdd\n                && this.state.imageLanggananAdd && this.state.selectedNewMenu !== '' && this.refs.inputKategori.value !== \"Choose Category\") {\n                formdata = new FormData();\n                options = {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                }\n                data = {\n                    namaPaket: this.state.inputNamaPaketAdd,\n                    harga: this.state.inputHargaAdd,\n                    discount: this.state.inputDiscountAdd,\n                    deskripsi: this.state.inputDeskripsiAdd,\n                    imagePath: this.state.imageLanggananAdd,\n                    kategori: this.refs.inputKategori.value,\n                    idMenu: this.state.selectedNewMenu\n                }\n                \n                formdata.append('image', this.state.imageLanggananAdd[0])\n                formdata.append('data', JSON.stringify(data))\n    \n                Axios.post(urlApi + 'langganan/addLanggananJadwalLama/', formdata, options)\n                .then((res) => {\n                    this.setState({\n                        inputNamaPaketAdd: false, inputHargaAdd: false, inputDiscountAdd: false,\n                        inputDeskripsAdd: false, imageLanggananAdd: false, tambahJadwal: false,\n                        tambahJadwalDariMenuClick: false, listAllMenuTambahJadwal: [],\n                        inputNamaMenuBaru: '', inputDeskripsiMenu: '', selectedNewMenu: '', tambahPaketClicked: false\n                    })\n                    swal (\"Congratulation!\", \"Package has been added!\", \"success\")\n                    this.resetFunction()\n                    this.props.updateSubscribe()\n                }).catch((err) => {\n                    this.setState({tambahPaketClicked: false})\n                    swal ('Eror', `${err.response.data.message}`, 'error')\n                    this.resetFunction()\n                    console.log(err)\n                })\n    \n            } else {\n                this.setState({tambahPaketClicked: false})\n                swal ('Eror', 'Please complete all data required and add one schedule!', 'error')\n                this.resetFunction()\n            }\n\n        } else {\n            if ( this.state.inputNamaPaketAdd && this.state.inputHargaAdd && this.state.inputDiscountAdd\n                && this.state.imageLanggananAdd && this.state.inputNamaMenuBaru !== '' && this.state.inputDeskripsiMenu !== '' && this.refs.inputKategori.value !== \"Choose Category\") {\n                \n                formdata = new FormData();\n                options = {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    }\n                }\n                \n                data = {\n                    namaPaket: this.state.inputNamaPaketAdd,\n                    harga: this.state.inputHargaAdd,\n                    discount: this.state.inputDiscountAdd,\n                    deskripsi: this.state.inputDeskripsiAdd,\n                    kategori: this.refs.inputKategori.value,\n                    Menu: this.state.inputNamaMenuBaru,\n                    Deskripsi: this.state.inputDeskripsiMenu\n                }\n\n                formdata.append('image', this.state.imageLanggananAdd[0])\n                formdata.append('data', JSON.stringify(data))\n                \n                Axios.post(urlApi + 'langganan/addLanggananJadwalBaru/', formdata, options)\n                .then((res) => {\n                    this.setState({\n                        inputNamaPaketAdd: false, inputHargaAdd: false, inputDiscountAdd: false,\n                        inputDeskripsAdd: false, imageLanggananAdd: false, tambahJadwal: false,\n                        tambahJadwalDariMenuClick: false, listAllMenuTambahJadwal: [],\n                        inputNamaMenuBaru: '', inputDeskripsiMenu: '', selectedNewMenu: '', tambahPaketClicked: false\n                    })\n                    swal (\"Congratulation!\", \"Package has been added!\", \"success\")\n                    this.resetFunction()\n                    this.props.updateSubscribe()\n                }).catch((err) => {\n                    this.setState({tambahPaketClicked: false})\n                    swal ('Eror', `${err.response.data.message}`, 'error')\n                    this.resetFunction()\n                    console.log(err)\n                })\n\n            } else {\n                this.setState({tambahPaketClicked: false})\n                swal ('Eror', 'Please input all data required and add one schedule!', 'error')\n                this.resetFunction()\n            }\n        }\n    }\n\n    resetFunction = () => {\n        document.getElementById(\"newProductForm\").reset()\n    }\n\n    /////////////////////////////////////////// RENDER FUNCTION ///////////////////////////////////////////\n\n    renderPilihanMenuUntukTambah = () => {\n        var jsx = this.state.listAllMenuTambahJadwal.map(val => {\n             return <option key={val.id} value={val.id}>{val.Menu}</option>\n        })\n        return jsx\n    }\n\n    render() {\n        return (\n                <div className=\"my-5\">\n                    <div className=\"row m-3\">\n                        <div className=\"col-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header text-center\" style={{backgroundColor: '#E32E89'}}>\n                                    <h3>ADD PACKAGE</h3>\n                                </div>\n                                <form className=\"card-body mx-3\" id=\"newProductForm\">\n                                    <div className=\"row justify-content-center\">\n                                        <div className=\"col-12 col-md-4\">\n                                            <label htmlFor=\"inputNameProduct\">Name</label>\n                                            <input placeholder=\"Input Package Name\" type=\"text\" id=\"inputProduct1\" className=\"form-control\"  onChange={(e) => this.setState({inputNamaPaketAdd: e.target.value})}/>\n                                        </div>\n                                        <div className=\"col-6 col-md-4\">\n                                            <label htmlFor=\"inputPriceProduct\">Price</label>\n                                            <input placeholder=\"Input Package Price\" type=\"number\" id=\"inputProduct2\" className=\"form-control\" onChange={(e)=> this.setState({inputHargaAdd: e.target.value})}/>\n                                        </div>\n                                        <div className=\"col-6 col-md-4\">\n                                            <label htmlFor=\"inputDiscountProduct\">Discount (in percentage)</label>\n                                            <input placeholder=\"Input Package Discount (optional)\" type=\"number\" id=\"inputProduct3\" className=\"form-control\" onInput={(e) => e.target.value = e.target.value.slice(0, 2)} onChange={(e) => this.setState({inputDiscountAdd: e.target.value})}/>\n                                        </div>\n                                    </div>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-4\">\n                                                <h6 className=\"mb-2\">Description</h6>\n                                                <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Input Package Description\" id=\"inputProduct4\" onChange={(e)=> this.setState({inputDeskripsiAdd: e.target.value})}/>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <h6 className=\"mb-2\">Category</h6>\n                                            <select ref='inputKategori' className=\"browser-default custom-select mt-1\">\n                                                <option>Chose Category</option>\n                                                <option value=\"mealbox\">Meal Box</option>\n                                                <option value=\"sweets\">Sweets</option>\n                                                <option value=\"snack\">Snack</option>\n                                                <option value=\"others\">Others</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-12 col-md-4\">\n                                            <h6 className=\"mb-3\">Upload Image</h6>\n                                            <div className=\"row\">\n                                                <div className=\"col\">\n                                                    <input type=\"file\" onChange={this.imageLanggananAdd}/>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12 mt-3\">\n                                            <div>\n                                                <h5 className='text-center'>ADD ONE SCHEDULE</h5>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <div className=\"row\">\n                                                {\n                                                    this.state.tambahJadwal\n                                                    ?\n                                                    <>\n                                                        {\n                                                            this.state.tambahJadwalDariMenuClick\n                                                            ?\n                                                            <>  \n                                                                <div className=\"col-12\">\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-12 mt-3 text-center\">\n                                                                            <select onChange={this.getMenuTambahJadwal}>\n                                                                                <option>Please Choose Menu</option>\n                                                                                    {this.renderPilihanMenuUntukTambah()}\n                                                                            </select>\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-12 text-center\">\n                                                                            <Button variant=\"secondary\" className=\"mt-3\" onClick={() => this.setState({tambahJadwal: false, tambahJadwalDariMenuClick: false, inputNamaMenuBaru: '', inputDeskripsiMenu: '', selectedNewMenu: ''})}>Back</Button>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </>\n                                                            :\n                                                            <>\n                                                                <div className=\"col-12\">\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-12\">\n                                                                            <div className=\"col-12\">\n                                                                                <label htmlFor=\"inputPlaceholderEx\">Menu Name</label>\n                                                                                <input placeholder=\"Input Menu Name\" type=\"text\" id=\"inputPlaceholderEx\" className=\"form-control mb-3\" onChange={(e) => this.setState({inputNamaMenuBaru: e.target.value})}/>\n                                                                            </div>\n                                                                            <div className=\"col-12\">\n                                                                                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                                                                    <Form.Label>Description</Form.Label>\n                                                                                    <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Input Menu Description\" onChange={(e) => this.setState({inputDeskripsiMenu: e.target.value})}/>\n                                                                                </Form.Group>\n                                                                            </div>   \n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-12 text-center\">\n                                                                            <Button variant=\"secondary\" onClick={() => this.setState({tambahJadwal: false, tambahJadwalDariMenuClick: false, inputNamaMenuBaru: '', inputDeskripsiMenu: '', selectedNewMenu: ''})}>Back</Button>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </>\n                                                        }\n                                                    </>\n                                                    :\n                                                    <>\n                                                        <div className=\"col-6 text-center\">\n                                                            <Button variant=\"secondary\" onClick={() => this.getAllMenuTambahJadwal()}>List Menu</Button>\n                                                        </div>\n                                                        <div className=\"col-6 text-center\">\n                                                            <Button variant=\"secondary\" onClick={() => this.setState({tambahJadwalDariMenuClick: false, tambahJadwal: true})}>New Menu</Button>\n                                                        </div>\n                                                    </>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-12 my-3 text-center\">\n                                            {\n                                                this.state.tambahPaketClicked\n                                                ?\n                                                <Spinner animation=\"border\" variant=\"secondary\"/>\n                                                :\n                                                // <input className=\"btn btn-block btn-success\" type=\"reset\" value=\"ADD PACKAGE\"></input>\n                                                <Button variant=\"success\" className=\"btn btn-block\" onClick={this.tambahPaketLanggananDanJadwal}>ADD PACKAGE</Button>\n                                            }\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, {updateSubscribe})(ManagePaketBaru);","export const updateSubscribe = () => {\n    return {\n        type:'UPDATE_PACKAGE'\n    }\n}\n\nexport const updateDone = () => {\n    return {\n        type: 'UPDATE_DONE'\n    }\n}","import React, { Component } from 'react';\nimport Axios from 'axios'\nimport { urlApi } from '../../HELPERS/database'\nimport {connect} from 'react-redux'\nimport ManagePaketBaru from './NewProduct'\nimport swal from 'sweetalert'\nimport { Table, Button, Modal, Form, Spinner } from 'react-bootstrap'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { updateDone } from '../../REDUX/Action/ManageProduct'\n\nclass LanggananAdmin extends Component {\n    state = {\n        listPaket: [],\n        boxDetail: false,\n        selectedProduct: null,\n        editImageClick: 0,\n        imageLanggananNew: null,\n        inputNamaPaketEdit: false,\n        inputHargaEdit: false,\n        inputDiscountEdit: false,\n        inputDeskripsiEdit: false,\n        listJadwal: [],\n        modal9: false,\n        selectedEditJadwalId: 0,\n        selectedNewMenuEdit: null,\n        listAllMenu: [],\n        tambahJadwalClick: false,\n        listAllMenuTambahJadwal: null,\n        selectedNewMenu: null,\n        inputNamaMenuBaru: '',\n        inputDeskripsiMenu: '',\n        updatePaket: false,\n        onBtnDeletePaketClick: false,\n        onBtnSaveUpdateClick: false,\n        onBtnEditImageLanggananClick: false,\n        tambahJadwalMenuBaruClick: false,\n        tambahMenuDanJadwalClick: false,\n        deleteJadwalClick: false,\n        updateJadwalLanggananClick: false\n    }\n\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr\n        this.setState({\n          [modalNumber]: !this.state[modalNumber]\n        })\n      }\n\n    componentDidMount(){\n        this.getDataPaket()\n    }\n\n    componentDidUpdate(){\n        if (this.props.update !== this.state.updatePaket) {\n            this.getDataPaket()\n        }\n    }\n\n    getDataPaket = () => {\n        Axios.get(urlApi + 'langganan/getKategoriLangganan')\n        .then((res) => {\n            this.setState({listPaket: res.data, updatePaket: false})\n            this.props.updateDone()\n        }).catch((err) => {\n            console.log(err)\n            this.setState({updatePaket: false})\n        })\n    }\n\n    getAllMenu = (id) => {\n        Axios.get(urlApi + 'jadwal/getallmenu')\n        .then((res) => {\n            this.setState({listAllMenu: res.data})\n        }).catch((err) => {\n            console.log(err)\n        })\n        this.setState({selectedEditJadwalId: id})\n    }\n\n    getAllMenuTambahJadwal = (id) => {\n        Axios.get(urlApi + 'jadwal/getallmenu')\n        .then((res) => {\n            this.setState({listAllMenuTambahJadwal: res.data, tambahJadwalClick: true})\n        }).catch((err) => {\n            console.log(err)\n        })\n    }\n\n    getMenuJadwalEdit = (e) => {\n        this.setState({selectedNewMenuEdit: e.target.value})\n    }\n\n    getMenuTambahJadwal = (e) => {\n        this.setState({selectedNewMenu: e.target.value})\n    }\n    \n    ////////////////////////////////////////////////////FUNGSI BAYANGAN//////////////////////////////////////////\n    detailProductClicked = (selectedProduct) => {\n        Axios.get(urlApi + 'jadwal/getJadwalByIdPaket/' + selectedProduct.id)\n        .then((res)=>{\n            this.setState({selectedProduct: selectedProduct, boxDetail: true})\n            this.setState({listJadwal: res.data})\n        }).catch((err)=> {\n            console.log(err)\n        })\n        \n    }\n\n    imageLanggananNew = (e) => {\n        if(e.target.files[0]) {\n            this.setState({ imageLanggananNew: e.target.files })\n        } else {\n            this.setState({ imageLanggananNew: null })\n        }\n    }\n\n\n    //////////////////////////////////////////////////// FUNGSI UTAMA KE BACKEND ////////////////////////////////////////////////\n    onBtnAddImageLanggananClick = (id) => {\n        if(this.state.imageLanggananNew) {\n            var formdata = new FormData();\n\n            var options = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            formdata.append('image', this.state.imageLanggananNew[0])\n\n            Axios.put(urlApi + 'langganan/addImageLangganan/' + id, formdata, options)\n                .then(res => {\n                    this.detailProductClicked(...res.data)\n                }).catch(err => {\n                    console.log(err.response)\n                })\n        } else {\n            alert('Please input image!')\n        }\n    }\n\n    onBtnEditImageLanggananClick = (id) => {\n        this.setState({onBtnEditImageLanggananClick: true})\n        if(this.state.imageLanggananNew) {\n            var formdata = new FormData();\n\n            var options = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            formdata.append('image', this.state.imageLanggananNew[0])\n\n            Axios.put(urlApi + 'langganan/editImageLanggananById/' + id, formdata, options)\n                .then(res => {\n                    this.detailProductClicked(...res.data)\n                    this.getDataPaket()\n                    this.setState({onBtnEditImageLanggananClick: false})\n                }).catch(err => {\n                    console.log(err.response)\n                })\n        } else {\n            alert('Please input image!')\n        }\n    }\n\n    saveEditingLangganan = (objSelected) => {\n        this.setState({onBtnSaveUpdateClick: true})\n       var obj = {\n           namaPaket: this.state.inputNamaPaketEdit ? this.state.inputNamaPaketEdit : objSelected.namaPaket,\n           harga: this.state.inputHargaEdit ? this.state.inputHargaEdit : objSelected.harga,\n           discount: this.state.inputDiscountEdit ? this.state.inputDiscountEdit : objSelected.discount,\n           deskripsi: this.state.inputDeskripsiEdit ? this.state.inputDeskripsiEdit : objSelected.deskripsi,\n           kategori: this.refs.inputKategori.value,\n           imagePath: objSelected.imagePath   \n       }\n\n       Axios.put(urlApi + 'langganan/editLanggananById/' + objSelected.id, obj)\n       .then((res) => {\n            this.getDataPaket()\n            this.setState({boxDetail: false, selectedProduct: null, editImageClick: 0, onBtnSaveUpdateClick: false})      \n       })\n       .catch((err) => {\n           console.log(err)\n       })\n    }\n\n    onBtnDeletePaketClick = (idPaket, jadwal) => {\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this package.\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((willDelete) => {\n            if (willDelete) {\n                this.setState({onBtnDeletePaketClick: true})\n                var deleteObj = {\n                    data: {\n                        idLangganan: idPaket,\n                        jadwalPaket: jadwal\n                    },\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                }\n        \n                Axios.delete(urlApi + 'langganan/hapusPaketLangganan/', deleteObj)\n                .then((res)=>{\n                    this.getDataPaket()\n                    this.setState({boxDetail: false, selectedProduct: null, editImageClick: 0, onBtnDeletePaketClick: false})\n                    swal(\"Congratulation! This package has been deleted!\", {\n                        icon: \"success\",\n                    });\n                }).catch((err)=> {\n                    if (err.response.data.message) {\n                        this.setState({onBtnDeletePaketClick: false})\n                        swal ('Eror', `${err.response.data.message}`, 'error')\n                    } else {\n                        this.setState({onBtnDeletePaketClick: false})\n                        console.log(err)\n                    }\n                })\n            } else {\n                this.setState({onBtnDeletePaketClick: false})\n                swal(\"Your package has not been deleted.\");\n            }\n        })\n    }\n\n    updateJadwalLangganan = (menuBaru, idConnectionTable) => {\n        this.setState({updateJadwalLanggananClick: true})\n        Axios.put(urlApi + 'jadwal/editJadwalById', {\n            idMenuBaru: menuBaru,\n            idConnection: idConnectionTable\n        })\n        .then((res)=>{\n            this.detailProductClicked(this.state.selectedProduct)\n            this.setState({selectedEditJadwalId: 0, updateJadwalLanggananClick: false})\n        }).catch((err)=> {\n            console.log(err)\n        })\n    }\n\n    deleteJadwal = (idConnection) => {\n        this.setState({deleteJadwalClick: true})\n        Axios.delete(urlApi + 'jadwal/deleteJadwalById/' + idConnection)\n        .then((res)=>{\n            this.detailProductClicked(this.state.selectedProduct)\n            this.setState({selectedEditJadwalId: 0, deleteJadwalClick: false})\n        }).catch((err)=> {\n            console.log(err)\n            this.setState({selectedEditJadwalId: 0, deleteJadwalClick: false})\n        })\n    }\n\n    tambahJadwalMenuBaru = () => {\n        this.setState({tambahJadwalMenuBaruClick: true})\n        if (this.state.selectedNewMenu === '' || this.state.selectedNewMenu === null) {\n            this.setState({tambahJadwalMenuBaruClick: false})\n            swal ('Eror', `Please complete all data required!`, 'error')\n        } else {\n            var obj = {\n                idMenu: this.state.selectedNewMenu,\n                idKategori: this.state.selectedProduct.id,\n                urutan: this.state.listJadwal[(this.state.listJadwal.length - 1)].urutan + 1\n            }\n    \n            Axios.post(urlApi + 'jadwal/addConnection/', obj)\n                .then((res)=>{\n                    this.detailProductClicked(this.state.selectedProduct)\n                    this.setState({tambahJadwalClick: false, selectedNewMenu: null, tambahJadwalMenuBaruClick: false})\n                }).catch((err)=> {\n                    console.log(err)\n                })\n            }\n        }\n\n    tambahMenuDanJadwal = () => {\n        this.setState({tambahMenuDanJadwalClick: true})\n        if (this.state.inputNamaMenuBaru === '' || this.state.inputDeskripsiMenu === '') {\n            swal ('Eror', `Please complete all data required!`, 'error')\n            this.setState({tambahMenuDanJadwalClick: false})\n            this.resetFunction()\n        } else {\n            var obj = {\n                Menu: this.state.inputNamaMenuBaru,\n                Deskripsi: this.state.inputDeskripsiMenu,\n                idKategori: this.state.selectedProduct.id,\n                urutan: this.state.listJadwal[(this.state.listJadwal.length - 1)].urutan + 1\n            }\n            Axios.post(urlApi + 'jadwal/addMenuBaruDanConnection', obj)\n            .then((res)=>{\n                this.detailProductClicked(this.state.selectedProduct)\n                this.resetFunction()\n                this.setState({inputNamaMenuBaru: '', inputDeskripsiMenu: '', tambahMenuDanJadwalClick: false})\n            }).catch((err)=> {\n                if (err.response.data.message) {\n                    swal ('Eror', `${err.response.data.message}`, 'error')\n                    this.resetFunction()\n                    this.setState({tambahMenuDanJadwalClick: false})\n                } else {\n                    console.log(err)\n                    this.resetFunction()\n                    this.setState({tambahMenuDanJadwalClick: false})\n                }\n            })\n        }\n    }\n\n    resetFunction = () => {\n        document.getElementById(\"newProductModalForm\").reset()\n    }\n\n    /////////////////////////////////////////MODAL FUNCTION///////////////////////////////////////////////////////////\n\n    renderModal = (props) => {\n        return (\n          <Modal\n            {...props}\n            size=\"xl\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header style={{backgroundColor: '#E32E89'}}>\n                <h3 className=\"text-center font-weight-bold\">{this.state.selectedProduct.namaPaket} Catering Schedule</h3>\n            </Modal.Header>\n            <Modal.Body>\n                <div className='container-fluid'>\n                    <div className=\"row\">\n                        <div className=\"col-7 mt-3\">\n                            <h5 style={{textDecoration: 'underline', marginBottom: '20px', color: 'purple'}}>EDIT SCHEDULE</h5>\n                            <Table responsive>\n                                <thead color=\"success-color\">\n                                    <tr>\n                                        <th>Menu</th>\n                                        <th>Order</th>\n                                        <th>Edit</th>\n                                        <th>Delete</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                        {this.renderJadwalProductEdit()}\n                                </tbody>\n                                </Table>\n                        </div>\n                        <div className=\"col-5 mt-3\">\n                            <h5 style={{textDecoration: 'underline', marginBottom: '20px', color: 'purple'}}>ADD SCHEDULE</h5>\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    {\n                                        this.state.tambahJadwalClick === false\n                                        ?\n                                        <Button variant=\"secondary\" onClick={() => this.getAllMenuTambahJadwal()}>GET FROM LIST MENU</Button>   \n                                        :\n                                        <div className=\"row ml-1\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12\">\n                                                    <p className=\"font-weight-bold\">GET FROM LIST MENU</p>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col-8 pr-3\">\n                                                    <select onChange={this.getMenuTambahJadwal}>\n                                                        <option>Choose Menu</option>\n                                                        {this.renderPilihanMenuUntukTambah()}\n                                                    </select>\n                                                </div>\n                                                <div className=\"col-8 my-3 text-center\">\n                                                    {\n                                                        this.state.tambahJadwalMenuBaruClick\n                                                        ?\n                                                        <Spinner animation=\"border\" variant=\"secondary\"/>\n                                                        :\n                                                        <Button variant=\"success\" onClick={this.tambahJadwalMenuBaru}>ADD SCHEDULE</Button>\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    }   \n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <form className=\"col-12 mt-3\" id=\"newProductModalForm\">\n                                    <p className=\"font-weight-bold\">NEW MENU</p>\n                                    <label htmlFor=\"inputPlaceholderEx\">Menu Name</label>\n                                    <input placeholder=\"Input Menu Name\" type=\"text\" id=\"inputPlaceholderEx\" className=\"form-control mb-3\" onChange={(e) => this.setState({inputNamaMenuBaru: e.target.value})}/>\n                                    <label htmlFor=\"inputDescriptionNew\">Description</label>\n                                    <Form.Control as=\"textarea\" placeholder=\"Input Description\" id=\"inputDescriptionNew\" onChange={(e) => this.setState({inputDeskripsiMenu: e.target.value})}></Form.Control>\n                                    {\n                                        this.state.tambahMenuDanJadwalClick\n                                        ?\n                                        <center>\n                                        <Spinner animation=\"border\" variant=\"secondary\" className=\"mt-3\"/>\n                                        </center>\n                                        :\n                                        <Button className=\"mt-3\" variant=\"success\" onClick={this.tambahMenuDanJadwal}>Add Schedule</Button>\n                                    }\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.toggle(9)}>OK</Button>\n            </Modal.Footer>\n          </Modal>\n        );\n    }\n\n    /////////////////////////////////////////RENDER FUNCTION///////////////////////////////////////////////////////////////\n    renderProduct = () => {\n        return this.state.listPaket.map(val => {\n            return (\n                <tr key={val.id} className='text-dark text-center' style={{cursor: 'pointer'}}  onClick={() => this.detailProductClicked(val)}>\n                    <td>{val.id}</td>\n                    <td>{val.namaPaket}</td>\n                    <td>{val.harga}</td>\n                    <td>{val.deskripsi}</td>\n                    <td>{val.discount === 0 ? '-' : val.discount}</td>\n                </tr>\n            )\n        })\n    }\n\n   renderJadwalProduct = () => {\n        var urutanPalsu = 0\n        var jsx = this.state.listJadwal.map(val => {\n            urutanPalsu = urutanPalsu + 1\n            return (\n                <tr key={val.urutan}>\n                    <td>{val.Menu}</td>\n                    <td>{val.Deskripsi}</td>\n                    <td>{urutanPalsu}</td>\n                </tr>\n            )\n        })\n        return jsx\n   }\n\n   renderJadwalProductEdit = () => {\n        var urutanPalsu = 0\n        var jsx = this.state.listJadwal.map(val=> {\n            if (val.id !== this.state.selectedEditJadwalId) {\n                urutanPalsu = urutanPalsu + 1\n                return (\n                    <tr key={val.id}>\n                        <td>{val.Menu}</td>\n                        <td>{urutanPalsu}</td>\n                        <td><input type=\"button\" className='btn btn-info' value=\"Edit\" onClick={() => this.getAllMenu(val.id)}/></td>\n                        {\n                            this.state.listJadwal.length === 1\n                            ?\n                            <td><h6>Cant be deleted, please add one more menu.</h6></td>\n                            :\n                            <>\n                            {\n                                this.state.deleteJadwalClick\n                                ?\n                                <td>\n                                    <Spinner animation=\"border\" variant=\"secondary\"/>\n                                </td>\n                                :\n                                <td><input type=\"button\" className='btn btn-danger' value=\"Delete\" onClick={() => this.deleteJadwal(val.id)}/></td>\n                            }\n                            </>\n                        }\n                    </tr>\n                )\n            }\n            return (\n                <tr key={val.id}>\n                    <td>\n                        <select onChange={this.getMenuJadwalEdit}>\n                            <option>{val.Menu}</option>\n                            {this.renderPilihanMenu()}\n                        </select>\n                    </td>\n                    <td>{val.urutan}</td>\n                    <td><input type=\"button\" className='btn btn-danger' value=\"Cancel\" onClick={() => this.setState({selectedEditJadwalId: 0})}/></td>\n                    {\n                        this.state.updateJadwalLanggananClick\n                        ?\n                        <td><Spinner animation=\"border\" variant=\"secondary\"/></td>\n                        :\n                        <td><input type=\"button\" className='btn btn-success' value=\"Save\" onClick={()=> this.updateJadwalLangganan(this.state.selectedNewMenuEdit, this.state.selectedEditJadwalId)}/></td>\n                    }\n                </tr>\n            )\n        })\n        return jsx\n   }\n\n   renderPilihanMenu = () => {\n       var jsx = this.state.listAllMenu.map(val => {\n            return <option key={val.id} value={val.id}>{val.Menu}</option>\n       })\n       return jsx\n   }\n\n   renderPilihanMenuUntukTambah = () => {\n    var jsx = this.state.listAllMenuTambahJadwal.map(val => {\n         return <option key={val.id} value={val.id}>{val.Menu}</option>\n    })\n    return jsx\n    }\n\n    ///////////////////////////////////////////////////////////// Handle Image Error ////////////////////////////////////////////////////\n\n\n    imageError = (image) => {\n        image.onerror = \"\"\n        image.target.src = `${urlApi}/images/ImageError/Explanation.png`\n        this.setState({erorImage: `${urlApi}/images/ImageError/Explanation.png`, imageStatus: 'null'})\n        return true;\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    imageError = (image) => {\n        image.onerror = \"\"\n        image.target.src = `${urlApi}/images/ImageError/Explanation.png`\n        return true;\n    }\n\n    render() {\n        return (\n            <div className=\"background-main-admin\">\n            <div className=\"container-fluid card-main card-main-mobile\">\n                <div className=\"row mr-3 ml-3\">\n                    <div className=\"col-12\">\n                        <div className=\"card mt-3\">\n                            <div className=\"card-header text-center\" style={{backgroundColor: '#E32E89'}}>\n                                <h3>SUBCRIPTION PRODUCT</h3>\n                            </div>\n                            <div className=\"card-body\">\n                                <Table striped bordered hover className=\"text-white\">\n                                        <thead className=\"text-center text-white\" style={{backgroundColor: '#60217B'}}>\n                                            <tr>\n                                                <th>ID</th>\n                                                <th>Name</th>\n                                                <th>Price</th>\n                                                <th>Description</th>\n                                                <th>Discount</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.renderProduct()}\n                                        </tbody>\n                                </Table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    {\n                        this.state.boxDetail\n                        ?\n                        <div className=\"row mt-3 mb-5 mr-3 ml-3\">\n                            <div className=\"col-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-header bg-info\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-right\">\n                                                <input type=\"button\" value=\"Cancel\" className=\"btn btn-danger btn-sm\" onClick={() => this.setState({boxDetail: false, selectedProduct: null, editImageClick: 0})}/>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h3 className=\"h3-responsive\">MANAGE SUBSCRIPTION PRODUCT</h3>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <div className=\"row justify-content-center mb-4 ml-3 mr-4\">\n                                            <div className=\"col-12 col-md-4\">\n                                                <label htmlFor=\"inputPlaceholderEx\">Package Name</label>\n                                                <input placeholder={this.state.selectedProduct.namaPaket} type=\"text\" id=\"inputPlaceholderEx\" className=\"form-control\"  onChange={(e) => this.setState({inputNamaPaketEdit: e.target.value})}/>\n                                            </div>\n                                            <div className=\"col-6 col-md-4\">\n                                                <label htmlFor=\"inputPlaceholderEx1\">Price</label>\n                                                <input placeholder={this.state.selectedProduct.harga} type=\"number\" id=\"inputPlaceholderEx1\" className=\"form-control\" onChange={(e)=> this.setState({inputHargaEdit: e.target.value})}/>\n                                            </div>\n                                            <div className=\"col-6 col-md-4\">\n                                                <label htmlFor=\"inputPlaceholderEx2\">Discount</label>\n                                                <input placeholder={this.state.selectedProduct.discount} type=\"number\" id=\"inputPlaceholderEx2\" className=\"form-control\" onInput={(e) => e.target.value = e.target.value.slice(0, 2)} onChange={(e) => this.setState({inputDiscountEdit: e.target.value})}/>\n                                            </div>\n                                        </div>\n                                        <div className=\"row mb-4 ml-3 mr-4\">\n                                            <div className=\"col-12 col-md-5\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-12\">\n                                                        <img src={`${urlApi}${this.state.selectedProduct.imagePath}`} style={{\n                                                            width:'450px', height: '300px', borderRadius: '4px',\n                                                        }} onError={(e) => this.imageError(e)} alt='Img produk masih kosong' className='img-fluid'></img>\n                                                    </div> \n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-12 text-center\">\n                                                        {\n                                                            this.state.selectedProduct.imagePath === \"\" \n                                                            ?\n                                                                <>\n                                                                    {\n                                                                        this.state.editImageClick === 0\n                                                                        ?\n                                                                        <input type=\"button\" value=\"Add Image\" className=\"btn btn-info mt-4\" onClick={() => this.setState({editImageClick: 1})}/>\n                                                                        :\n                                                                        <div className=\"mt-5 mb-2\">\n                                                                            <input type=\"file\" onChange={this.imageLanggananNew}/>\n                                                                        </div>\n                                                                    }\n                                                                </>\n                                                            :\n                                                                <>\n                                                                {\n                                                                    this.state.editImageClick === 0\n                                                                    ?\n                                                                    <input type=\"button\" value=\"Edit Image\" className=\"btn btn-info mt-4\" onClick={() => this.setState({editImageClick: 1})}/>\n                                                                    :\n                                                                    <div className=\"mt-2 mb-2\">\n                                                                        <input type=\"file\" onChange={this.imageLanggananNew}/>\n                                                                    </div>\n                                                                }\n                                                                </>                                                            \n                                                        }\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-12 text-center\">\n                                                        {\n                                                            this.state.editImageClick === 0\n                                                            ?\n                                                            null\n                                                            :\n                                                                <>\n                                                                    {\n                                                                        this.state.selectedProduct.imagePath === \"\" \n                                                                        ?\n                                                                        <input type=\"button\" value=\"Upload New Image\" className=\"btn btn-info btn-block\" onClick={() => this.onBtnAddImageLanggananClick(this.state.selectedProduct.id)} />\n                                                                        :\n                                                                        <>\n                                                                        {\n                                                                            this.state.onBtnEditImageLanggananClick\n                                                                            ?\n                                                                            <Spinner animation=\"border\" variant=\"secondary\"/>\n                                                                            :\n                                                                            <input type=\"button\" value=\"Upload New Image\" className=\"btn btn-info btn-block mb-3\" onClick={() => this.onBtnEditImageLanggananClick(this.state.selectedProduct.id)} />\n                                                                        }\n                                                                        </>\n                                                                    }\n                                                                </>  \n                                                        }\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"col-12 col-md-7\">\n                                                <div className=\"row\">\n                                                    <div className=\"col-12\">\n                                                    <Form.Group>\n                                                        <label htmlFor=\"inputDescriptionProduct\">Description</label>\n                                                        <Form.Control as=\"textarea\" rows=\"3\" id=\"inputDescriptionProduct\" placeholder={this.state.selectedProduct.deskripsi} onChange={(e)=> this.setState({inputDeskripsiEdit: e.target.value})}/>\n                                                    </Form.Group>\n                                                    </div>\n                                                    <div className=\"col-12\">\n                                                        <label htmlFor=\"inputCategoryProduct\">Category</label>\n                                                        <select ref='inputKategori' id=\"inputCategoryProduct\" className=\"browser-default custom-select mt-1\">\n                                                            <option value={this.state.selectedProduct.kategori}>{this.state.selectedProduct.kategori.charAt(0).toUpperCase() + this.state.selectedProduct.kategori.substring(1)}</option>\n                                                            {this.state.selectedProduct.kategori === 'mealbox' ? null : <option value=\"mealbox\">Meal Box</option>}\n                                                            {this.state.selectedProduct.kategori === 'sweets' ? null : <option value=\"sweets\">Sweets</option>}\n                                                            {this.state.selectedProduct.kategori === 'snack' ? null : <option value=\"snack\">Snack</option>}\n                                                            {this.state.selectedProduct.kategori === 'others' ? null : <option value=\"others\">Others</option>}\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row my-4 ml-3 mr-4\">\n                                            <div className=\"col-12\">\n                                                <div className=\"row mb-2\">\n                                                    <div className=\"col-10\">\n                                                        <h5>CATERING SCHEDULE</h5>\n                                                    </div>\n                                                    <div className=\"col-2 align-content-end\">\n                                                        <Button variant=\"info\" onClick={this.toggle(9)}>\n                                                            <FontAwesomeIcon icon={faPencilAlt} size=\"sm\"/>\n                                                        </Button>\n                                                    </div>\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-12\">\n                                                        <Table responsive>\n                                                            <thead variant=\"secondary\">\n                                                                <tr>\n                                                                    <th>Menu</th>\n                                                                    <th>Description</th>\n                                                                    <th>Order</th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                                {this.renderJadwalProduct()}\n                                                            </tbody>\n                                                        </Table>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row mb-4 ml-3 mr-4\">\n                                            <div className=\"col-12 text-center\">\n                                                {\n                                                    this.state.onBtnDeletePaketClick\n                                                    ?\n                                                    <Spinner animation=\"border\" variant=\"secondary\"/>\n                                                    :\n                                                    <>\n                                                    {\n                                                        this.state.onBtnSaveUpdateClick\n                                                        ?\n                                                        <input type=\"button\" value=\"DELETE THIS PACKAGE\" className=\"btn btn-danger btn-block font-weight-bolder\"/>\n                                                        :\n                                                        <input type=\"button\" value=\"DELETE THIS PACKAGE\" className=\"btn btn-danger btn-block font-weight-bolder\" onClick={() => this.onBtnDeletePaketClick(this.state.selectedProduct.id, this.state.listJadwal)}/>\n                                                    }\n                                                    </>\n                                                }\n                                            </div>\n                                        </div>\n                                        <div className=\"row mb-4 ml-3 mr-4\">\n                                            <div className=\"col-12 text-center\">\n                                                {\n                                                    this.state.onBtnSaveUpdateClick\n                                                    ?\n                                                    <Spinner animation=\"border\" variant=\"secondary\"/>\n                                                    :\n                                                    <>\n                                                    {\n                                                        this.state.onBtnDeletePaketClick\n                                                        ?\n                                                        <input type=\"button\" value=\"SAVE UPDATE PRODUCT\" className=\"btn btn-success btn-block font-weight-bolder\"/>\n                                                        :\n                                                        <input type=\"button\" value=\"SAVE UPDATE PRODUCT\" className=\"btn btn-success btn-block font-weight-bolder\" onClick={() => this.saveEditingLangganan(this.state.selectedProduct)}/>\n                                                    }\n                                                    </>\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n                <ManagePaketBaru/>\n                {\n                    this.state.selectedProduct\n                    ?\n                    <>\n                        {this.renderModal(\n                            {\n                                show: this.state.modal9,\n                                onHide: () => this.setState(\n                                            {\n                                                modal9: false\n                                            }\n                                        )\n                            }\n                        )}\n                    </>\n                    :\n                    null\n                }\n               </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        update: state.packageChecker.updatePackage,\n    }\n}\n\nexport default connect(mapStateToProps, {updateDone})(LanggananAdmin);","import React, { Component } from 'react'\n// import io from 'socket.io-client'\nimport {Form} from 'react-bootstrap'\n\n// const socket = io.connect('http://localhost:1997')\n\nclass Messages extends Component {\n    state = {\n        message: '',\n        name: '',\n        chat: []\n    }\n    \n\n    render() {\n        return (\n            <div className=\"px-3\">\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Example textarea</Form.Label>\n                    <Form.Control as=\"textarea\" rows=\"3\" />\n                    <button>SEND</button>\n                </Form.Group>\n            </div>\n        );\n    }\n}\n\nexport default Messages;","import React, {Component} from 'react'\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {connect} from 'react-redux'\nimport {keepLogin, checkLocalStorage} from './REDUX/Action/userAction'\nimport { Switch, Route } from 'react-router-dom'\nimport ScrollToTop from './HELPERS/scrollTop'\nimport Login from './PAGES/Login/Login'\nimport Header from './PAGES/Header/Header'\nimport Navigation from './PAGES/Navigation/Navbar'\nimport LandingPage from './PAGES/LandingPage/LandingPage'\nimport User from './PAGES/User/User'\nimport Confirmation from './PAGES/Confirmation/Confirmation'\nimport Order from './PAGES/Order/Order'\nimport Selling from './PAGES/Selling/Selling'\nimport Product from './PAGES/Product/ManageProduct'\nimport Message from './PAGES/Messages/Messages'\nimport {Card} from 'react-bootstrap'\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    var token = localStorage.getItem('token')\n    if (token) {\n        this.props.keepLogin(token)\n    } else {\n        this.props.checkLocalStorage()\n    }\n  }\n\n  render() {\n\n    if (!this.props.user.userChecker) {\n      return (\n          <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n          </div>\n      )\n  }\n\n    return (\n      <div>\n        <Switch>\n        {\n          this.props.user.username === \"\" || this.props.user.username !== \"Admin\"\n          ?\n            <> \n              <Login/>\n              <Route exact path='/Login' component={Login}/>\n            </>\n          :\n          <>\n              <div className=\"d-none d-lg-block\">\n                <Header/>\n                <div className=\"row min-vh-100\">\n                  <div className=\"col-2 bg-dark pt-5\">\n                    <Navigation/>\n                  </div>\n                  <div className=\"col-10 pt-4 background-workspace\">\n                    <ScrollToTop/>\n                    <Route exact path='/' component={LandingPage}/>\n                    <Route exact path='/user' component={User}/>\n                    <Route exact path='/confirmation' component={Confirmation}/>\n                    <Route exact path='/order' component={Order}/>\n                    <Route exact path='/selling' component={Selling}/>\n                    <Route exact path='/product' component={Product}/>\n                    <Route exact path='/message' component={Message}/>\n                  </div>\n                </div>\n              </div>\n              <div className=\"container-fluid background-image d-flex align-items-center justify-content-center d-lg-none\">\n                <Card body >Please use a large device.</Card>\n              </div>\n          </>\n        }\n        </Switch>    \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      user: state.user\n  }\n}\n\nexport default connect(mapStateToProps, {keepLogin, checkLocalStorage})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ReduxThunk from 'redux-thunk'\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware} from 'redux'\nimport Reducers from './REDUX/Reducer';\nimport {HashRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nconst globalStore = createStore(Reducers, {}, applyMiddleware(ReduxThunk))\n\nReactDOM.render(<Provider store={globalStore}><HashRouter><App /></HashRouter></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/Chew and Cheer blue_11.50edd358.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Chew and Cheer blue_21.e0c5efe7.jpg\";"],"sourceRoot":""}